---
title: "Causal random forests classwork"
subtitle: "MELODEM data workshop"
editor_options: 
  chunk_output_type: console
---
I recommend restarting R between each slide deck!

# Exercise 1

In this exercise you will fit a causal random forest to your data and estimate the average treatment effect (ATE).

## Setup

Change `data_melodem` to be the name of your data.

```{r, message=FALSE}

withr::with_dir(
  new = here::here(),
  code = {
    targets::tar_load_globals()
    # change data_melodem to be the name of your data.
    tar_load(data_melodem)
  }
)

# change data_melodem to be the name of your data.
data_classwork <- data_melodem

```

## Fit a causal forest

First, we'll prepare the data by designating `X`, `Y`, `W`, and `D` matrices for the `grf` package. You can review what these inputs are and how they're used  [online](https://grf-labs.github.io/grf/reference/causal_forest.html#arguments) 

```{r}

# helper function for grf data prep 
data_grf <- data_coerce_grf(data_classwork$values)

# just a view of the X matrix
head(data_grf$X)

```


Next, you'll pass the data matrices to `causal_survival_forest()`:

```{r}

fit_grf <- causal_survival_forest(
  X = data_grf$X, # covariates
  Y = data_grf$Y, # time to event
  W = data_grf$W, # treatment status
  D = data_grf$D, # event status
  # 3-year horizon by default. 
  # Recommend adjusting to your data's median time-to-event
  horizon = 3, 
  # treatment effect will be
  # measured in terms of the
  # restricted mean survival time
  target = 'RMST' 
)

fit_grf

```

## Average treatment effect

With a fitted `grf` object, you can access a doubly robust average treatment effect (ATE) estimate:

```{r}

average_treatment_effect(fit_grf)

```

This estimate indicates that the difference in estimated survival time of the "treated" group minus the "not treated" group is `r average_treatment_effect(fit_grf)['estimate']`.

- A *negative* number indicates the RMST at `horizon` of the treated group is *lower* than the untreated group.

- A *positive* number indicates the RMST at `horizon` of the treated group is *higher* than the untreated group.

In the case of the simulated data, being in the "treatment" group for `apoe4` results in higher risk of the outcome, so a negative ATE makes sense.

**Your turn:** Interpret these results for your data. Do you detect an overall treatment effect?

```{r}

library(table.glue)

# hint: here's how to get CI from ATE.
ate <- average_treatment_effect(fit_grf)
cis <- ate['estimate'] + c(-1, 1) * ate['std.err'] * 1.96

table_glue("The estimated ATE is {ate[1]} \\
           (95% CI: {cis[1]} to {cis[2]})")

```

**Re-run your forest with** `target = "survival.probability"` instead of `target = "RMST"`. This will make the average treatment effect be the difference in the probability of being event-free at `horizon` time units after baseline. 

- A *negative* number indicates the probability of being event-free at `horizon` for the treated group is *lower* than the untreated group.

- A *positive* number indicates the probability of being event-free at `horizon` for the treated group is *higher* than the untreated group.

Re-interpret your average treatment effect - is this result consistent with the result you got using RMST?

## Exercise 2

Estimate the best linear projection (BLP) of the conditional treatment effect from your forest to an intercept only model. The code below will do this:

```{r}

ones <- matrix(1, nrow = nrow(data_grf$X))

best_linear_projection(fit_grf, A = ones)

```

**Discuss with your neighbor**: 

- Does the intercept of this model match the estimate ATE? 

- Why or why not?

Estimate the BLP of the conditional treatment effect from your forest on to all the covariates used by the forest:

```{r}

best_linear_projection(fit_grf, A = data_grf$X)

```

**Interpret your results**:

- Does the intercept still match the estimated ATE? Why or why not?

- Is there evidence of heterogeneity in the conditional treatment effect based on any of the covariates?

- Do your results change if you use `target = "RMST"` versus `target = "survival.probability"` when you fit your forest?

## Exercise 3

Split your sample intro a training and testing set, then

1. Fit one causal survival forest to each set, separately.
1. Use the training forest to estimate CATE for the testing forest
1. Use the testing forest to evaluate RATE, using the estimated CATE values as a treatment prioritization rule.

Plot your results. Do you see evidence of heterogeneity?


